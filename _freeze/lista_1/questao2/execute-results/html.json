{
  "hash": "253f133baf9e9284a5d0d074b47dcd7b",
  "result": {
    "markdown": "---\ntitle: \"Questão 2\"\nsubtitle: \"Manipulação de dados\"\n---\n\n::: {.cell}\n\n:::\n\n\n\n<style>\nbody {\ntext-align: justify}\n</style>\n\n\n## Item a)\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, data.table, dtplyr, microbenchmark, geobr)\n```\n:::\n\n\nO procedimento a seguir lê novamente todos os arquivos adquiridos, mantendo apenas as colunas `estabelecimento_uf`, `vacina_descricao_dose` e `estabelecimento_municipio_codigo`, e obtem os dados do pacote `geobr` para as regiões de saúde.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#puxa dados das regioes de saudeo do geobr\nr_saude <- geobr::read_health_region(year = 2013)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ler arquivos com map e fread(select = c(nome das colunas))\n\nread_select <- function(x) {\n  fread(x, select = c(\"estabelecimento_uf\", \"vacina_descricao_dose\", \"estabelecimento_municipio_codigo\"))\n}\n\ntabela <- map_df(arquivos, read_select)\n\ntabela$estabelecimento_municipio_codigo <- as.character(tabela$estabelecimento_municipio_codigo)\n\n# de fato, é um data.table\nclass(tabela)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"data.table\" \"data.frame\"\n```\n:::\n:::\n\n\n\n## Item b)\n\nDe acordo com sites do Governo Federal, as Regiões de Saúde são formadas por municípios fronteiriços que compartilham identidades culturais, econômicas e sociais, redes de comunicação e infraestrutura de transportes. A finalidade dessas regiões é integrar a organização, o planejamento e a execução de ações e serviços de saúde.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# leitura de tabela intermediaria de codigos\ncodigos <- read.csv(\"../../dados_de_trabalhos/lista_1/Tabela_codigos.csv\",\n                    colClasses = \"character\") %>%\n  select(-X) %>%\n  janitor::clean_names()\n\n# realiza contagens\nvacinados <- tabela[, .N, \"estabelecimento_municipio_codigo\"]\n\n#faz os joins de forma mais clara que o merge\n#usar o merge permitiria realizar os joins sem a sumarização do passo anterior\njoins <- inner_join(codigos, r_saude, by = c(\"cod_regiao_de_saude\" = \"code_health_region\")) %>%\n  inner_join(vacinados, by = c(\"cod_ibge\" = \"estabelecimento_municipio_codigo\"))%>%\n  setDT()\n\n#quantidade de vacinados por regiao de saude\n# E\n#Condicionalmente, a faixa de vacinação por região de saúde (alta ou baixa, em relação à medianada distribuição de vacinações)\n\n# utilizando operacoes encadeadas de data.table\n\njoins <- joins[, .(N = sum(N)), cod_regiao_de_saude][, cobertura := ifelse(N > median(N), 'alta', 'baixa')][order(cod_regiao_de_saude),]%>% \n  group_by(cobertura) %>% \n  slice_max(order_by = N, n = 5)\n\njoins %>%\n  knitr::kable(\n    align = \"c\",\n    booktabs = TRUE,\n    longtable = TRUE,\n    linesep = \"\",\n    escape = FALSE,\n    col.names = c(\"Região de saúde\", \"Vacinações\", \"Cobertura\")\n    ) %>%\n  kableExtra::kable_styling(\n      position = \"center\",\n      latex_options = c(\"striped\", \"repeat_header\"),\n      stripe_color = \"gray!15\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> Região de saúde </th>\n   <th style=\"text-align:center;\"> Vacinações </th>\n   <th style=\"text-align:center;\"> Cobertura </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;\"> 13001 </td>\n   <td style=\"text-align:center;\"> 5594673 </td>\n   <td style=\"text-align:center;\"> alta </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> 27001 </td>\n   <td style=\"text-align:center;\"> 2803602 </td>\n   <td style=\"text-align:center;\"> alta </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> 12002 </td>\n   <td style=\"text-align:center;\"> 1121221 </td>\n   <td style=\"text-align:center;\"> alta </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> 27007 </td>\n   <td style=\"text-align:center;\"> 1018179 </td>\n   <td style=\"text-align:center;\"> alta </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> 16001 </td>\n   <td style=\"text-align:center;\"> 942405 </td>\n   <td style=\"text-align:center;\"> alta </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> 13004 </td>\n   <td style=\"text-align:center;\"> 362557 </td>\n   <td style=\"text-align:center;\"> baixa </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> 27003 </td>\n   <td style=\"text-align:center;\"> 360353 </td>\n   <td style=\"text-align:center;\"> baixa </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> 13009 </td>\n   <td style=\"text-align:center;\"> 359768 </td>\n   <td style=\"text-align:center;\"> baixa </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> 27008 </td>\n   <td style=\"text-align:center;\"> 328312 </td>\n   <td style=\"text-align:center;\"> baixa </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> 27010 </td>\n   <td style=\"text-align:center;\"> 317777 </td>\n   <td style=\"text-align:center;\"> baixa </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## Item c)\n\nPara repetimos as operações anteriores com `dtplyr`, basta passar individualmente as tabelas `tabela`, `codigos` e `r_saude` usadas no passo anterior na função `lazy_dt`, realizar as operações de join já feitas com `inner_join` e, após os agrupamentos e sumarização necessários, conforme ja feito, passar o produto das operações em pipe para ` %>% as_tibble()`.\n\nEste fluxo de trabalho permite trabalhar com a classe de dados do pacote `dtplyr` e o último passo devolve um objeto tabular completo para o usuário.\n\n## Item d)\n\n*--microbenchmark--*",
    "supporting": [
      "questao2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}